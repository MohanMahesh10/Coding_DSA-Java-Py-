class Solution {
    public TreeNode addOneRow(TreeNode root, int val, int depth) {

        if (depth == 1) {
            TreeNode newRoot = new TreeNode(val);
            newRoot.left = root;
            return newRoot;
        }
        

        insert(root, 1, val, depth);
        return root;
    }
    
    private void insert(TreeNode node, int currentDepth, int val, int targetDepth) {
        if (node == null) return;
        

        if (currentDepth == targetDepth - 1) {
            TreeNode oldLeft = node.left;
            TreeNode oldRight = node.right;
            
            node.left = new TreeNode(val);
            node.left.left = oldLeft;
            
            node.right = new TreeNode(val);
            node.right.right = oldRight;
        } else {
 
            insert(node.left, currentDepth + 1, val, targetDepth);
            insert(node.right, currentDepth + 1, val, targetDepth);
        }
    }
}
