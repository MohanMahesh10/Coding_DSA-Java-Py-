class Solution {
    public int nthSuperUglyNumber(int n, int[] primes) {
        int k = primes.length;
        int[] indices = new int[k];
        long[] nextMultiple = new long[k];
        int[] ugly = new int[n];

        ugly[0] = 1;

    
        for (int i = 0; i < k; i++) {
            nextMultiple[i] = primes[i];
        }

        for (int i = 1; i < n; i++) {
            long nextUgly = Long.MAX_VALUE;

  
            for (int j = 0; j < k; j++) {
                nextUgly = Math.min(nextUgly, nextMultiple[j]);
            }

            ugly[i] = (int) nextUgly;

     
            for (int j = 0; j < k; j++) {
                if (nextUgly == nextMultiple[j]) {
                    indices[j]++;
                    nextMultiple[j] = (long) primes[j] * ugly[indices[j]];
                }
            }
        }

        return ugly[n - 1];
    }
}
