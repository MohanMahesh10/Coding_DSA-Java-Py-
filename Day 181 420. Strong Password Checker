class Solution {
    public int strongPasswordChecker(String s) {
        int n = s.length(), replace = 0, one = 0, two = 0;
        boolean hasLower = false, hasUpper = false, hasDigit = false;

        for (int i = 0; i < n;) {
            char c = s.charAt(i);
            if (Character.isLowerCase(c)) hasLower = true;
            if (Character.isUpperCase(c)) hasUpper = true;
            if (Character.isDigit(c)) hasDigit = true;

            int j = i;
            while (i < n && s.charAt(i) == s.charAt(j)) i++;
            int len = i - j;
            if (len >= 3) {
                replace += len / 3;
                if (len % 3 == 0) one++;
                else if (len % 3 == 1) two++;
            }
        }

        int missing = (hasLower ? 0 : 1) + (hasUpper ? 0 : 1) + (hasDigit ? 0 : 1);

        if (n < 6) 
            return Math.max(missing, 6 - n);

        if (n <= 20) 
            return Math.max(missing, replace);

        int del = n - 20;
        int reduce = Math.min(del, one) + Math.min(Math.max(del - one, 0), two * 2) / 2 + Math.max(del - one - two * 2, 0) / 3;
        return del + Math.max(missing, replace - reduce);
    }
}
