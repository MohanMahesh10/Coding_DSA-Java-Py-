import java.util.*;

class Solution {
    public List<List<String>> accountsMerge(List<List<String>> accounts) {
        Map<String, String> emailToName = new HashMap<>();
        Map<String, List<String>> graph = new HashMap<>();

        for (List<String> account : accounts) {
            String name = account.get(0);
            for (int i = 1; i < account.size(); i++) {
                emailToName.put(account.get(i), name);
                graph.computeIfAbsent(account.get(i), x -> new ArrayList<>()).add(account.get(1));
                graph.computeIfAbsent(account.get(1), x -> new ArrayList<>()).add(account.get(i));
            }
        }

        Set<String> visited = new HashSet<>();
        List<List<String>> res = new ArrayList<>();

        for (String email : graph.keySet()) {
            if (!visited.contains(email)) {
                Stack<String> stack = new Stack<>();
                List<String> emails = new ArrayList<>();
                stack.push(email);
                visited.add(email);
                while (!stack.isEmpty()) {
                    String
