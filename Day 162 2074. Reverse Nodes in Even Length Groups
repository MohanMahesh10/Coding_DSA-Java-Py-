class Solution {
    public ListNode reverseEvenLengthGroups(ListNode head) {
        ListNode dummy = new ListNode(0);
        dummy.next = head;
        ListNode prevGroupEnd = dummy;
        ListNode curr = head;
        int groupSize =1;

        while(curr != null) {
            ListNode temp = curr;
            int count = 0;
            while (count < groupSize && temp != null) {
                temp = temp.next;
                count++;
            }
            if (count % 2 == 0) {
                ListNode prev = temp;
                ListNode node = curr;

                for (int i = 0; i < count; i++) {
                    ListNode nextNode = node.next;
                    node.next = prev;
                    prev = node;
                    node = nextNode;

                }
                ListNode newGroupEnd = curr;
                prevGroupEnd.next = prev;

                prevGroupEnd = newGroupEnd;

                curr  = temp;

            } else {

                for (int i = 0; i < count; i++) {
                    prevGroupEnd = curr;
                    curr = curr.next;
                }

            }

            groupSize++;
        }
        return dummy.next;
    }
}
