import java.util.*;

class Solution {
    public int slidingPuzzle(int[][] board) {
        StringBuilder start = new StringBuilder();
        for (int[] row : board)
            for (int n : row)
                start.append(n);
        String target = "123450";
        int[][] neighbors = {{1,3},{0,2,4},{1,5},{0,4},{1,3,5},{2,4}};
        Queue<String> q = new LinkedList<>();
        Set<String> visited = new HashSet<>();
        q.offer(start.toString());
        visited.add(start.toString());
        int moves = 0;
        while (!q.isEmpty()) {
            int size = q.size();
            for (int i = 0; i < size; i++) {
                String cur = q.poll();
                if (cur.equals(target)) return moves;
                int zero = cur.indexOf('0');
                for (int nei : neighbors[zero]) {
                    char[] arr = cur.toCharArray();
                    char temp = arr[nei];
                    arr[nei] = arr[zero];
                    arr[zero] = temp;
                    String next = new String(arr);
                    if (visited.add(next)) q.offer(next);
                }
            }
            moves++;
        }
        return -1;
    }
}
